DEFINICJE z wykładu
(define (append as bs)
  (if (null? as)
      bs
      (cons (car as)
            (append (cdr as) bs))))
 
(define (map f xs)
  (if (null? xs)
      null
      (cons (f (car xs))
            (map f (cdr xs)))))
 
(define (filter p? xs)
  (if (null? xs)
      null
      (if (p? (car xs))
          (cons (car xs)
                (filter p? (cdr xs)))
          (filter p? (cdr xs)))))
 
W zadaniach korzystam z zasady indukcji na listach
Aby zwiększyć czytelność dowodu będę pomijał przejścia (cdr (cons x y)) = y oraz (car (cons x y)) = x
 
;;ZAD1
TW 1
Dla każdego (xs, ys) i dowolnej funkcji jednoargumentowej f jeśli (list? xs) i (list? ys) jest spełnione to
    (map f (append xs ys)) = (append (map f xs) (map f ys))
 
Baza 1
 
Niech xs = null, f będzie dowolną funkcją jednoargumentową oraz dowolne ys takie, ąe (list? ys) = #t
 
L = (map f (append null ys)) ="z zad 5"= (map f ys)
P = (append (map f null) (map f ys)) ="z def map"= (append null (map f ys)) ="z zad 5"= (map f ys) = L
 
Założenie indukcyjne 1
 
Dla każdej funkcji jednoargumentowej f oraz dowolne xs, ys takie, że (list? ys)
(list? xs) zachodzi
    (map f (append xs ys)) = (append (map f xs) (map f ys))  
 
Krok indukcyjny 1
 
Weźmy dowolne xs, ys takie że (list? xs) = (list? ys) = #t, dowolna jednoargmunetową funkcję f oraz dowolne x takie że (list? (cons x xs)) = #t
 
Chcę pokazać, że  
    (map f (append (cons x xs) ys)) = (append (map f (cons x xs)) (map f ys))
 
L = (map f (append (cons x xs) ys)) ="z def appenda"= (map f (cons x (append xs ys))) ="z def map"= (cons (f  x) (map f (append xs ys)))                                                                                                                                                                          
P = (append (map f (cons x xs)) (map f ys)) ="z def mapy"= (append (cons (f x) (map f xs)) (map f ys)) ="z def appenda"= (cons (f x) (append (map f xs) (map f ys))) ="z zal ind"= (cons (f  x) (map f (append xs ys))) = L
 
Czyli L=P
Więc na mocy zasady indukcji na listach teza zachodzi dla dowolnych list xs i ys oraz dla dowolnej funkcji jednoargumentowej f.
 
;;ZAD2
TW 2
 
Dla każdego xs, ys i dowolnego jednoargumentowego predykatu p?  jeśli (list? xs) i (list? ys) jest spełnione to
    (filter p? (append xs ys)) = (append (filter p? xs) (filet p? ys))
 
Baza 2
 
Niech xs = null, p? będzie dowolnym predykatem jednoargumentowym oraz dowolne ys takie, że (list? ys) = #t
 
L = (filter p? (append null ys)) ="z zad 5"= (filter p? ys)
P = (append (filter p? null) (filter p? ys)) ="z def filter"= (append null (filter p? ys)) ="z zad 5"= (filter p? ys) = L
 
Założenie indukcyjne 2
 
Dla każdego predykatu jednoargumentowego p? oraz dowolne xs, ys takie, że (list? ys)
(list? xs) zachodzi
    (filter p? (append xs ys)) = (append (filter p? xs) (filter p? ys))  
 
Krok indukcyjny 2
 
Weźmy dowolne xs, ys takie że (list? xs) = (list? ys) = #t, dowolny predykat jednoargumentowy oraz dowolne x takie że (list? (cons x xs)) = #t
 
Chcę pokazać, że  
    (filter p? (append (cons x xs) ys)) = (append (filter p? (cons x xs)) (filet p? ys))
 
1* (p? x) = #t
 
L = (filter p? (append (cons x xs) ys)) ="z def appenda"= (filter p? (cons x (append xs ys))) ="z def filter"= (cons x (filter p? (append xs ys)))                                                                                                                                                                          
P = (append (filter p? (cons x xs)) (filet p? ys)) ="z def filter"= (append (cons x (filter p? xs)) (filet p? ys)) ="z def appenda"= (cons x (append (filter p? xs) (filet p? ys))) ="z zal indukcyjnego"= (cons x (filter p? (append xs ys))) = L
 
2* (p? x) = #f
 
L = (filter p? (append (cons x xs) ys)) ="z def appenda"= (filter p? (cons x (append xs ys))) ="z def filter"= (filter p? (append xs ys))                                                                                                                                                                         
P = (append (filter p? (cons x xs)) (filet p? ys)) ="z def filter"= (append (filter p? xs) (filet p? ys)) ="z zal indukcyjnego"= (filter p? (append xs ys)) = L
 
Czyli L=P
Więc na mocy zasady indukcji na listach teza zachodzi dla dowolnych list xs i ys oraz dla dowolnego jednoargumentowego predykatu p?.

